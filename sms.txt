using Newtonsoft.Json;
using SMS.Models.DAO;
using SMS.Models.EF;
using SMS.Web.Common;
using SMS.Web.Models;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Web.Mvc;

namespace SMS.Web.Controllers
{
    public class GoOutController : BaseController
    {
        private SMSDbContext _dbContext;

        public GoOutController()
        {
            _dbContext = new SMSDbContext();
        }

        /// <summary>
        /// Hàm show dữ liệu sử dụng ajax
        /// </summary>
        /// <param name="searchString"></param>
        /// <param name="page"></param>
        /// <param name="pageSize"></param>
        /// <returns></returns>
        public ActionResult History()
        {
            return View();
        }

        [AuthorizeUser(AccessLevel = 2)]
        [HttpGet]
        public ActionResult Cancel(int id)
        {
            var user = (UserLogin)Session[CommonConstants.USER_SESSION];
            var goout = _dbContext.Go_Out.FirstOrDefault(t => t.ID == id);
            goout.Cancel = true;
            goout.ApprovedStatus = 4;
            goout.ModifiedBy = user.EmpCode + "|" + user.FullName;
            goout.ModifiedDate = DateTime.Now;
            _dbContext.SaveChanges();

            return Content("Success");
        }

        [HttpPost]
        public ActionResult FetchGoOutData()
        {
            var currentRole = (HttpContext.User as CustomPrincipal).PriorityRole;

            var items = _dbContext.Go_Out_Items.ToList();

            var user = (UserLogin)Session[CommonConstants.USER_SESSION];

            var tName = _dbContext.Users.Include(t => t.Team).First(u => u.ID == user.ID).Team.Name;

            var model = _dbContext.Go_Out.Where(b => currentRole >= 4 || b.Team == tName).OrderByDescending(x => x.EstimatedDateOut).ToList();

            return Json(new { data = model, items, currentRole, recordsTotal = _dbContext.Go_Out.Count(), recordsFiltered = model.Count() });
        }

        /// <summary>
        /// Show danh sách phê duyệt cho TM, ITT, FST
        /// </summary>
        /// <param name="name"></param>
        /// <param name="from"></param>
        /// <param name="to"></param>
        /// <param name="team"></param>
        /// <param name="empcode"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult FetchGoOutApproveData(string name, int? from, int? to, string team = "", string empcode = "")
        {
            var user = (UserLogin)Session[CommonConstants.USER_SESSION];
            var tName = _dbContext.Users.Include(t => t.Team).First(u => u.ID == user.ID).Team.Name;
            var res = new List<Go_Out>();

            var isAdmin = (HttpContext.User as CustomPrincipal).PriorityRole >= 4;

            if (name == "itt")
            {
                res = _dbContext.Go_Out
                .Where(go => _dbContext.Go_Out_Items.Any(i => i.CatID == go.ID && i.AssetType == 1 && i.ITT_Status == null))
                .OrderByDescending(x => x.EstimatedDateOut)
                .ToList();
            }
            else if (name == "fst")
            {
                res = _dbContext.Go_Out
                .Where(go => _dbContext.Go_Out_Items.Any(i => i.CatID == go.ID && i.AssetType == 2 && i.FST_Status == null))
                .OrderByDescending(x => x.EstimatedDateOut)
                .ToList();
            }
            else
            {
                res = _dbContext.Go_Out.Where(go => go.ApprovedStatus == null && (isAdmin || tName == go.Team)).OrderByDescending(x => x.EstimatedDateOut).ToList();
            }

            var recordNumber = _dbContext.Go_Out.Count();

            //filter theo tiêu chí
            if (from != null)
            {
                res = res.Where(t => ((DateTimeOffset)t.CreatedDate.Value).ToUnixTimeSeconds() >= from).ToList();
            }

            if (to != null)
            {
                res = res.Where(t => ((DateTimeOffset)t.CreatedDate.Value).ToUnixTimeSeconds() <= to).ToList();
            }

            if (!string.IsNullOrEmpty(team))
            {
                res = res.Where(t => t.Team.Contains(team)).ToList();
            }

            if (!string.IsNullOrEmpty(empcode))
            {
                res = res.Where(t => t.EmpCode.Contains(empcode)).ToList();
            }

            if (name == "itt" && !isAdmin && tName != "SMT")
            {
                res.Clear();
            }

            if (name == "fst" && !isAdmin && tName != "FST")
            {
                res.Clear();
            }

            return Json(new { data = res, recordsTotal = _dbContext.Go_Out.Count(), recordsFiltered = recordNumber });
        }

        public ActionResult Detail(int id)
        {
            var GoOut = _dbContext.Go_Out.Find(id);
            var GoOutItems = _dbContext.Go_Out_Items.Where(t => t.CatID == id).ToList();
            GoOut.Go_Out_Items = GoOutItems;
            return View(GoOut);
        }

        /// <summary>
        /// Phương thức load view form tạo mới
        /// </summary>
        /// <returns></returns>
        /// 
        [AuthorizeUser(AccessLevel = 2)]
        [HttpGet]
        public ActionResult Create()
        {
            return View();
        }

        [AuthorizeUser(AccessLevel = 2)]
        [HttpPost]
        public ActionResult Create(Go_Out model)
        {
            try
            {
                if (!ModelState.IsValid)
                {
                    return Content("Bạn cần nhập đầy đủ thông tin");
                }
                var user = (UserLogin)Session[CommonConstants.USER_SESSION];
                model.CreatedDate = DateTime.Now;
                model.CreatedBy = user.EmpCode + "|" + user.FullName;

                ////file
                //if (Request.Files.Count > 0)
                //{
                //    var file = Request.Files.Get("file");
                //    var fileName = Path.GetFileName(file.FileName);
                //    model.AttachedFile = fileName;

                //    if (!Directory.Exists(Server.MapPath("~/Files")))
                //    {
                //        Directory.CreateDirectory(Server.MapPath("~/Files"));
                //    }
                //    var filePath = Server.MapPath("~/Files/" + fileName);
                //    file.SaveAs(filePath);
                //}

                var GoOut = _dbContext.Go_Out.Add(model);
                _dbContext.SaveChanges();
                return Content("Success");
            }
            catch (Exception ex)
            {
                return Content("Lỗi trong quá trình xử lý");
            }
        }

        /// <summary>
        /// Phương thức load view sửa
        /// </summary>
        /// <returns></returns>
        /// 
        [AuthorizeUser(AccessLevel = 2)]
        public ActionResult Edit(int id)
        {
            var GoOut = _dbContext.Go_Out.Find(id);
            var GoOutItems = _dbContext.Go_Out_Items.Where(t => t.CatID == id).ToList();
            GoOut.Go_Out_Items = GoOutItems;
            return View(GoOut);
        }

        /// <summary>
        /// Phương thức sửa cho PIC
        /// </summary>
        /// <param name="go_Out"></param>
        /// <returns></returns>
        /// 
        [AuthorizeUser(AccessLevel = 2)]
        [HttpPost]
        public ActionResult Edit(Go_Out m)
        {
            try
            {
                var goJSON = Request.Form.Get("GoOut");
                var model = JsonConvert.DeserializeObject<Go_Out>(goJSON);

                var user = (UserLogin)Session[CommonConstants.USER_SESSION];

                var GoOut = _dbContext.Go_Out.FirstOrDefault(t => t.ID == model.ID);
                GoOut.ModifiedBy = user.EmpCode + "|" + user.FullName;
                GoOut.ModifiedDate = DateTime.Now;
                GoOut.Reason = model.Reason;
                GoOut.Shift = model.Shift;
                GoOut.Purpose = model.Purpose;
                GoOut.EstimatedDateOut = model.EstimatedDateOut;
                GoOut.EstimatedTimeOut = model.EstimatedTimeOut;
                GoOut.EstimatedDateReturn = model.EstimatedDateReturn;
                GoOut.EstimatedTimeReturn = model.EstimatedTimeReturn;
                //if (filePath != "")
                //{
                //    GoOut.AttachedFile = model.AttachedFile;
                //}

                var listItemIDs = new List<int>();
                foreach (var item in model.Go_Out_Items)
                {
                    if (item.ID == 0)
                    {
                        _dbContext.Go_Out_Items.Add(item);
                    }
                    else
                    {
                        listItemIDs.Add(item.ID);
                        var bringItem = _dbContext.Go_Out_Items.FirstOrDefault(t => t.ID == item.ID);

                        bringItem.Item = item.Item;
                        bringItem.Serial = item.Serial;
                        bringItem.Quantity = item.Quantity;
                        bringItem.Unit = item.Unit;
                        bringItem.AssetType = item.AssetType;
                        bringItem.IsReturn = item.IsReturn;
                        bringItem.ReturnDate = item.ReturnDate;
                        bringItem.ReturnTime = item.ReturnTime;
                        bringItem.ModifiedBy = user.EmpCode;
                        bringItem.ModifiedDate = DateTime.Now;
                    }
                }
                var itemsDelete = _dbContext.Go_Out_Items.Where(t => !listItemIDs.Contains(t.ID) && t.CatID == GoOut.ID);
                _dbContext.Go_Out_Items.RemoveRange(itemsDelete);

                _dbContext.SaveChanges();

                return Content("Success");
            }
            catch (System.Exception ex)
            {
                return Content("Lỗi trong quá trình xử lý");
            }
        }

        [AuthorizeUser(AccessLevel = 2)]
        [HttpGet]
        public ActionResult Delete(int id)
        {
            var GoOutItems = _dbContext.Go_Out_Items.Where(t => t.CatID == id).ToList();
            _dbContext.Go_Out_Items.RemoveRange(GoOutItems);

            var GoOut = _dbContext.Go_Out.FirstOrDefault(t => t.ID == id);
            _dbContext.Go_Out.Remove(GoOut);

            _dbContext.SaveChanges();

            return Content("Success");
        }

        [AuthorizeUser(AccessLevel = 3)]
        public ActionResult ApproveDetail(int id)
        {
            var GoOut = _dbContext.Go_Out.Find(id);
            var GoOutItems = _dbContext.Go_Out_Items.Where(t => t.CatID == id).OrderByDescending(t => t.CreatedDate).ToList();
            GoOut.Go_Out_Items = GoOutItems;
            return View(GoOut);
        }

        [AuthorizeUser(AccessLevel = 3, ExceptRoleName = "FM")]
        public ActionResult Approve()
        {
            return View();
        }

        [AuthorizeUser(AccessLevel = 3)]
        [HttpPost]
        public ActionResult ApproveEmp(int id, string remark, int status)
        {
            var GoOut = _dbContext.Go_Out.Find(id);

            var user = (UserLogin)Session[CommonConstants.USER_SESSION];
            GoOut.ApprovedBy = user.EmpCode + "|" + user.FullName;
            GoOut.ApprovedDate = DateTime.Now;
            GoOut.ApproverRemark = remark;
            GoOut.ApprovedStatus = status;

            _dbContext.SaveChanges();
            return Content(JsonConvert.SerializeObject(GoOut), "application/json");
        }

        [AuthorizeUser(AccessLevel = 3, ExceptRoleName = "FM")]
        [HttpPost]
        public ActionResult Approve(int id, int itemId, string remark, int status)
        {
            var GoOut = _dbContext.Go_Out.Find(id);

            var GoOutItems = _dbContext.Go_Out_Items.Find(itemId);
            var user = (UserLogin)Session[CommonConstants.USER_SESSION];
            GoOutItems.ApprovedBy = user.EmpCode + "|" + user.FullName;
            GoOutItems.ApprovedDate = DateTime.Now;
            GoOutItems.ApproverRemark = remark;
            GoOutItems.ApprovedStatus = status;

            _dbContext.SaveChanges();
            return Content(JsonConvert.SerializeObject(GoOutItems), "application/json");
        }

        [AuthorizeUser(AccessLevel = 3)]
        //ITT
        public ActionResult ITTApproveDetail(int id)
        {
            var GoOut = _dbContext.Go_Out.Find(id);
            var GoOutItems = _dbContext.Go_Out_Items.Where(t => t.CatID == id && t.AssetType == 1).OrderByDescending(t => t.CreatedDate).ToList();
            GoOut.Go_Out_Items = GoOutItems;
            return View(GoOut);
        }

        [AuthorizeUser(AccessLevel = 3, ExceptRoleName = "FM")]
        public ActionResult ITTApprove()
        {
            return View();
        }

        [AuthorizeUser(AccessLevel = 3, ExceptRoleName = "FM")]
        [HttpPost]
        public ActionResult ITTApprove(int id, int itemId, string remark, int status)
        {
            var GoOut = _dbContext.Go_Out.Find(id);

            var GoOutItems = _dbContext.Go_Out_Items.Find(itemId);
            var user = (UserLogin)Session[CommonConstants.USER_SESSION];
            GoOutItems.ITT = user.EmpCode + "|" + user.FullName;
            GoOutItems.ITT_Date = DateTime.Now;
            GoOutItems.ITT_Remark = remark;
            GoOutItems.ITT_Status = status;

            _dbContext.SaveChanges();
            return Content(JsonConvert.SerializeObject(GoOutItems), "application/json");
        }

        [AuthorizeUser(AccessLevel = 3, ExceptRoleName = "FM")]
        //FST
        public ActionResult FSTApproveDetail(int id)
        {
            var GoOut = _dbContext.Go_Out.Find(id);
            var GoOutItems = _dbContext.Go_Out_Items.Where(t => t.CatID == id && t.AssetType == 2).OrderByDescending(t => t.ID).ToList();
            GoOut.Go_Out_Items = GoOutItems;
            return View(GoOut);
        }

        [AuthorizeUser(AccessLevel = 3)]
        public ActionResult FSTApprove()
        {
            return View();
        }

        [AuthorizeUser(AccessLevel = 3, ExceptRoleName = "FM")]
        [HttpPost]
        public ActionResult FSTApprove(int id, int itemId, string remark, int status)
        {
            var GoOut = _dbContext.Go_Out.Find(id);

            var GoOutItems = _dbContext.Go_Out_Items.Find(itemId);
            var user = (UserLogin)Session[CommonConstants.USER_SESSION];
            GoOutItems.FST = user.EmpCode + "|" + user.FullName;
            GoOutItems.FST_Date = DateTime.Now;
            GoOutItems.FST_Remark = remark;
            GoOutItems.FST_Status = status;

            _dbContext.SaveChanges();
            return Content(JsonConvert.SerializeObject(GoOutItems), "application/json");
        }

        public ActionResult GOReport(int id)
        {
            var goout = _dbContext.Go_Out.Find(id);
            var gooutItems = _dbContext.Go_Out_Items.Where(t => t.CatID == id).ToList();
            goout.Go_Out_Items = gooutItems;
            return View(goout);
        }
    }
}





------------------------------------------------------------------------------------------



@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/Assets/css/jquery.timepicker.min.css" rel="stylesheet" />
    <link href="~/Assets/css/jquery-confirm.css" rel="stylesheet" />
}

<div class="form-horizontal">
    <div class="card-header">
        <h5 class="m-0 font-weight-bold text-primary">ĐĂNG KÝ RA NGOÀI</h5>
    </div>
    <!--Cột bên trái dành cho form đăng ký-->
    <div class="col-md-12 row-form">
        <div class="column form-horizontal form-left col-md-7">
            <div class="form-group row-1 input-group">
                <label class="control-label col-md-2 lb">Mã CNV <span class="red">(*)</span></label>
                <div class="col-md-3 input-group input-group-sm">
                    <input class="form-control input-previous-button col-md-12" id="txtEmpCodeGO" maxlength="8" autocomplete="off" />
                </div>
            </div>

            @*<div class="form-group input-group">
                <label class="control-label col-md-2 top-space">Đăng ký nhóm</label>
                <div class="col-10 input-group">
                    <a id="guest-multi-day" class="btn-info btn btn-sm" title="Đăng ký theo đoàn" style="color: white; cursor: pointer" data-toggle="collapse" data-target=".multi_day">
                        <i class="fas fa-edit"></i>&nbsp; Đăng ký nhóm
                    </a>
                    &nbsp;
                    &nbsp;
                    <div class="multi_day row collapse input-group-sm col-8">
                        <div>
                            <a id="multi" class="btn-primary btn btn-sm" href="/Guest/TemplateGuest" title="Đăng ký theo đoàn" style="color: white; cursor: pointer">
                                <i class="fas fa-download"></i>&nbsp; Tải file mẫu
                            </a>
                        </div>
                        &nbsp;&nbsp;
                        <div class="form-horizontal col-8 row-add input-group-sm" id="import_file" style="padding: 1px">
                            <input class="input-group-sm" type="file" accept=".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel" id="fileRedirectUrl" placeholder="Chọn file Excel" />
                        </div>
                    </div>
                </div>
            </div>*@

            <div class="form-group input-group">
                <label class="control-label col-md-2 top-space">Ca <span class="red">(*)</span></label>
                <div class="col-3 input-group-sm">
                    <select class="form-control input-previous-button" id="shift">
                        <option value="0" selected>Hành chính</option>
                        <option value="1">Ca 1</option>
                        <option value="2">Ca 2</option>
                        <option value="3">Ca 3</option>
                    </select>
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-2 top-space">Mục đích <span class="red">(*)</span></label>
                <div class="col-3 input-group-sm">
                    <select class="form-control input-previous-button" id="purpose">
                        <option value="true" selected>Công việc</option>
                        <option value="false">Cá nhân</option>
                    </select>
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-2 top-space">Lý do <span class="red">(*)</span></label>
                <div class="col-md-10 input-group-sm">
                    <textarea class="form-control col-md-12" style="resize: none" id="reason"></textarea>
                </div>
            </div>

            <div class="form-group input-group specific-date-pick">
                <label class="col-2 top-space" for="EstimatedDateOut">Ngày ra <span class="red">(*)</span></label>
                <div class="col-3 input-group-sm">
                    <input class="form-control input-previous-button datepicker" id="estimated_date_out" placeholder="Ngày" style="background: white" readonly autocomplete="off" />
                </div>
                <label class="top-space" for="EstimatedTimeOut">Giờ ra <span class="red">(*)</span></label>
                <div class="col-2 input-group-sm">
                    <input class="form-control input-previous-button timepicker" id="estimated_time_out" placeholder="Giờ" type="time" />
                </div>
            </div>

            <div class="form-group input-group specific-date-pick">
                <label class="col-2 top-space" for="EstimatedDateReturn">Ngày quay lại <span class="red">(*)</span></label>
                <div class="col-3 input-group-sm">
                    <input class="form-control input-previous-button datepicker" id="estimated_date_return" placeholder="Ngày" style="background: white" readonly autocomplete="off" />
                </div>
                <label class="top-space" for="EstimatedTimeReturn">Giờ quay lại <span class="red">(*)</span></label>
                <div class="col-2 input-group-sm">
                    <input class="form-control input-previous-button timepicker" id="estimated_time_return" placeholder="Giờ" type="time" />
                </div>
            </div>
        </div>

        <div class="column col-md-1 col-mid"></div>

        <!--Cột bên phải dành cho thông tin nhân viên-->
        <div class="column form-horizontal form-right col-md-4">
            <!--Ảnh profile-->
            <div class="form-group col-12 profile-img">
                <div class="img-profile" id="emp_img">
                    <img id="img-profile" src="~/Assets/img/the-world.jpg" />
                </div>
            </div>
            <!--Thông tin profile-->
            <div class="form-group input-group input-group-sm">
                <label class="col-3 top-space" for="FullName">Họ và tên</label>
                <input readonly class="form-control col-9 input-previous-button" id="txtFullNameGO" />
            </div>
            <div class="form-group input-group input-group-sm">
                <label class="col-3 top-space" for="Positon">Vị trí</label>
                <input readonly class="form-control col-9 input-previous-button" id="txtPositionGO" />
            </div>
            <div class="form-group input-group input-group-sm">
                <label class="col-3 top-space" for="Positon">Phòng ban</label>
                <input readonly class="form-control col-9 input-previous-button" id="txtTeamGO" />
            </div>
        </div>
    </div>
</div>

<br />

<div class="note col-12">
    <span class="control-label" style="color: dodgerblue"><u>Lưu ý</u>: <span style="color: #858796">&nbsp;Các trường <span style="color:red">(*)</span> bắt buộc phải nhập đầy đủ.</span></span>
</div>

<br />

<div class="bottom collapse show">
    <div class="form-horizontal row-add" id="bring-out-items" style="width:100%">
        <div class="items-container">
            <table class="table-bordered table table-hover" id="GO-items">
                <thead>
                    <tr class="table-header-items">
                        <th></th>
                        <th>Tên tài sản</th>
                        <th>Serial</th>
                        <th>Số lượng</th>
                        <th>Đơn vị</th>
                        <th>Loại tài sản</th>
                        <th>Mang quay lại</th>
                        <th colspan="2">Thời gian quay lại</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
    <div style="text-align: center">
        <label id="add-row-items" class="btn-primary btn top-space btn-sm" title="Thêm hàng hóa khác" style="cursor: pointer; margin-top:8px;">
            <i class="fas fa-plus"></i>&nbsp; Thêm tài sản
        </label>
        <button id="register" class="btn-success btn btn-sm" type="submit" title="Đăng ký mang hàng ra" style="cursor: pointer">
            <i class="fas fa-edit"></i>&nbsp; Đăng ký
        </button>
    </div>
</div>

@section scripts{
    <script src="~/Assets/js/jquery.timepicker.min.js"></script>
    <script src="~/Assets/js/jquery-confirm.js"></script>
    <script src="~/Assets/js/go_out/common.js"></script>
    <script>
        $("#add-row-items").off('click').on('click', function (e) {
            var html = `<tr class="row-items">
                                    <td>
                                        <label class="control-label btn btn-sm delete-items"><i class="fas fa-times-circle"></i></label>
                                    </td>
                                    <td class="input-group-sm">
                                        <input class="form-control input-previous-button item" />
                                    </td>
                                    <td class="input-group-sm">
                                        <input class="form-control input-previous-button serial" />
                                    </td>
                                    <td class="input-group-sm">
                                        <input type="number" class="form-control input-previous-button quantity" min="0" />
                                    </td>
                                    <td class="input-group-sm">
                                        <input class="form-control input-previous-button unit" maxlength = "50" />
                                    </td>
                                    <td class="input-group-sm">
                                        <select class="form-control input-previous-button assetType">
                                            <option value="0" selected>Hàng thường</option>
                                            <option value="1">Hàng IT</option>
                                            <option value="2">Hàng độc hại</option>
                                        </select>
                                    </td>
                                    <td class="input-group-sm">
                                        <select class="form-control input-previous-button isReturn">
                                            <option value="true" selected>Có</option>
                                            <option value="false">Không</option>
                                        </select>
                                    </td>
                                    <td class="input-group-sm">
                                        <input class="form-control datepicker returnDate" placeholder="Ngày" style="background: white" readonly autocomplete="off" />
                                    </td>
                                    <td class="input-group-sm">
                                        <input class="form-control timepicker returnTime" placeholder="Giờ" type="time"/>
                                    </td>
                                </tr>`;
            $('#GO-items > tbody:last-child').append(html);

            $('.datepicker, #estimated_date, .returnDate').datepicker({
                dateFormat: 'dd/mm/yy'
            });

            $("#GO-items").on("click", ".delete-items", function () {
                $(this).closest(".row-items").remove();
            });
        });

        $('.datepicker, #estimated_date, .returnDate').datepicker({
            dateFormat: 'dd/mm/yy'
        });

        $("#GO-items").on("click", ".delete-items", function () {
            $(this).closest(".row-items").remove();
        });

        $('#txtEmpCodeGO').keyup(function () {
            var count = $('#txtEmpCodeGO').val().length;
            if (count == 7 || count == 8) {
                _userGO.getUserGO();
            } else {
                $('#txtFullNameGO').val("");
                $('#txtPositionGO').val("");
                $('#txtTeamGO').val("");
            }
        });

        $("#GO").removeClass('collapse');
        $("#GO").removeClass('collapsed');
        $("#GO").attr("aria-expanded", "true");
        $("#GOCreate").addClass('active');
        $("#collapseGoOut").addClass('show');
        $("#collapseInOut").removeClass('collapse');

        var date = new Date();

        var day = date.getDate(),
            hour = date.getHours(),
            min = date.getMinutes();

        day = (day < 10 ? "0" : "") + day;
        hour = (hour < 10 ? "0" : "") + hour;
        min = (min < 10 ? "0" : "") + min;

        displayTime = hour + ":" + min;
        document.getElementById("estimated_time_out").value = displayTime;
        document.getElementById("estimated_time_return").value = displayTime;
    </script>
}




-------------------------------------------------------------------------------



@model SMS.Models.EF.Go_Out
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/Assets/css/jquery.timepicker.min.css" rel="stylesheet" />
    <link href="~/Assets/css/jquery-confirm.css" rel="stylesheet" />
}

<div class="form-horizontal">
    <div class="card-header">
        <h5 class="m-0 font-weight-bold text-primary">CHỈNH SỬA RA NGOÀI</h5>
    </div>
    <!--Cột bên trái dành cho form đăng ký-->
    <div class="col-md-12 row-form">
        <div class="column form-horizontal form-left col-md-7">
            <div class="form-group row-1 input-group">
                <label class="control-label col-md-2 lb">Mã CNV <span class="red">(*)</span></label>
                <div class="col-md-3 input-group input-group-sm">
                    <input type="hidden" id="txtID" value="@Model.ID" />
                    <input class="form-control input-previous-button col-md-12" id="txtEmpCodeGO" value="@Model.EmpCode" readonly />
                </div>
            </div>

            @*<div class="form-group input-group">
                <label class="control-label col-md-2 top-space">Đăng ký nhóm</label>
                <div class="col-10 input-group">
                    <a id="guest-multi-day" class="btn-info btn btn-sm" title="Đăng ký theo đoàn" style="color: white; cursor: pointer" data-toggle="collapse" data-target=".multi_day">
                        <i class="fas fa-edit"></i>&nbsp; Đăng ký nhóm
                    </a>
                    &nbsp;
                    &nbsp;
                    <div class="multi_day row collapse input-group-sm col-8">
                        <div>
                            <a id="multi" class="btn-primary btn btn-sm" href="/Guest/TemplateGuest" title="Đăng ký theo đoàn" style="color: white; cursor: pointer">
                                <i class="fas fa-download"></i>&nbsp; Tải file mẫu
                            </a>
                        </div>
                        &nbsp;&nbsp;
                        <div class="form-horizontal col-8 row-add input-group-sm" id="import_file" style="padding: 1px">
                            <input class="input-group-sm" type="file" accept=".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel" id="fileRedirectUrl" placeholder="Chọn file Excel" />
                        </div>
                    </div>
                </div>
            </div>*@

            <div class="form-group input-group">
                <label class="control-label col-md-2">Ca <span class="red">(*)</span></label>
                <div class="col-md-3 input-group-sm">
                    <select class="form-control input-previous-button" id="shift">
                        <option value="0" @if (Model.Shift == 0) { @: selected
                                }>
                            Hành chính
                        </option>
                        <option value="1" @if (Model.Shift == 1) { @: selected
                                }>
                            Ca 1
                        </option>
                        <option value="2" @if (Model.Shift == 2) { @: selected
                                }>
                            Ca 2
                        </option>
                        <option value="2" @if (Model.Shift == 3) { @: selected
                                }>
                            Ca 3
                        </option>
                    </select>
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-2">Mục đích <span class="red">(*)</span></label>
                <div class="col-md-3 input-group-sm">
                    <select class="form-control input-previous-button" id="purpose">
                        <option value="false" @if (Model.Purpose == false) { @: selected
                                }>
                            Cá nhân
                        </option>
                        <option value="true" @if (Model.Purpose == true) { @: selected
                                }>
                            Công việc
                        </option>
                    </select>
                </div>
            </div>

            <div class="form-group input-group">
                <label class="control-label col-md-2">Lý do <span class="red">(*)</span></label>
                <div class="col-md-10 input-group-sm">
                    <textarea class="form-control col-md-12" style="resize: none" id="reason">@Model.Reason</textarea>
                </div>
            </div>

            <div class="form-group input-group specific-date-pick">
                <label class="col-2 top-space" for="EstimatedDate">Ngày ra <span class="red">(*)</span></label>
                <div class="col-3 input-group-sm">
                    <input class="form-control input-previous-button datepicker" id="estimated_date_out" placeholder="Ngày" value="@Model.EstimatedDateOut" style="background: white" readonly autocomplete="off" />
                </div>
                <div class="col-2 input-group-sm">
                    <input class="form-control input-previous-button timepicker" id="estimated_time_out" placeholder="Giờ" value="@Model.EstimatedTimeOut" type="time" />
                    <input type="hidden" id="txtCreatedBy" value="@Model.CreatedBy" />
                    <input type="hidden" id="txtCreatedDate" value="@Model.CreatedDate" />
                </div>
            </div>

            <div class="form-group input-group specific-date-pick">
                <label class="col-2 top-space" for="EstimatedDate">Ngày quay lại <span class="red">(*)</span></label>
                <div class="col-3 input-group-sm">
                    <input class="form-control input-previous-button datepicker" id="estimated_date_return" placeholder="Ngày" value="@Model.EstimatedDateReturn" style="background: white" readonly autocomplete="off" />
                </div>
                <div class="col-2 input-group-sm">
                    <input class="form-control input-previous-button timepicker" id="estimated_time_return" placeholder="Giờ" value="@Model.EstimatedTimeReturn" type="time" />
                    <input type="hidden" id="txtCreatedBy" value="@Model.CreatedBy" />
                    <input type="hidden" id="txtCreatedDate" value="@Model.CreatedDate" />
                </div>
            </div>
        </div>

        <div class="column col-md-1 col-mid"></div>

        <!--Cột bên phải dành cho thông tin nhân viên-->
        <div class="column form-horizontal form-right col-md-4">
            <!--Ảnh profile-->
            <div class="form-group col-12 profile-img">
                <div class="img-profile">
                    <img id="img-profile" src="~/Assets/img/the-world.jpg" />
                </div>
            </div>
            <!--Thông tin profile-->
            <div class="form-group input-group profile input-group-sm">
                <label class="control-label col-md-3">Họ và tên</label>
                <input readonly class="form-control input-previous-button col-9 " id="txtFullNameGO" value="@Model.FullName" disabled />
            </div>
            <div class="form-group input-group profile input-group-sm">
                <label class="control-label col-md-3">Vị trí</label>
                <input readonly class="form-control input-previous-button col-9 " id="txtPositionGO" value="@Model.Position" disabled />
            </div>
            <div class="form-group input-group profile input-group-sm">
                <label class="control-label col-md-3">Phòng ban</label>
                <input readonly class="form-control input-previous-button col-9 " id="txtTeamBO" value="@Model.Team" disabled />
            </div>
        </div>
    </div>
</div>

<br />

<div class="note col-12">
    <span class="control-label" style="color: dodgerblue"><u>Lưu ý</u>: <span style="color: #858796">&nbsp;Các trường <span style="color:red">(*)</span> bắt buộc phải nhập đầy đủ.</span></span>
</div>

<br />

<div class="bottom collapse show">
    <div class="form-horizontal col-12 row-add" id="bring-out-items" style="width: 100%">
        <div class="items-container">
            <table class="table-bordered table table-hover" id="GO-items">
                <thead>
                    <tr class="table-header-items">
                        <th></th>
                        <th>Tên tài sản <span class="red">(*)</span></th>
                        <th>Serial <span class="red">(*)</span></th>
                        <th>Số lượng <span class="red">(*)</span></th>
                        <th>Đơn vị <span class="red">(*)</span></th>
                        <th>Loại tài sản <span class="red">(*)</span></th>
                        <th>Mang trở ra <span class="red">(*)</span></th>
                        <th colspan="2">Thời gian trở ra</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Go_Out_Items)
                    {
                        <tr class="row-items">
                            <td>
                                <label class="control-label btn btn-sm delete-items"><i class="fas fa-times-circle"></i></label>
                            </td>
                            <td class="input-group-sm">
                                <input type="hidden" class="ItemId" value="@item.ID" />
                                <input class="form-control input-previous-button item" value="@item.Item" />
                            </td>
                            <td class="input-group-sm">
                                <input class="form-control input-previous-button serial" value="@item.Serial" />
                            </td>
                            <td class="input-group-sm">
                                <input type="number" class="form-control input-previous-button quantity" value="@item.Quantity" min="0"/>
                            </td>
                            <td class="input-group-sm">
                                <input class="form-control input-previous-button unit" value="@item.Unit" maxlength="50" />
                            </td>
                            <td class="input-group-sm">
                                <select class="form-control input-previous-button assetType">
                                    <option value="0" @if (item.AssetType == 0) { @: selected
                                            }>
                                        Hàng thường
                                    </option>
                                    <option value="1" @if (item.AssetType == 1) { @: selected
                                            }>
                                        Hàng IT
                                    </option>
                                    <option value="2" @if (item.AssetType == 2) { @: selected
                                            }>
                                        Hàng độc hại
                                    </option>
                                </select>
                            </td>
                            <td class="input-group-sm">
                                <select class="form-control input-previous-button isReturn">
                                    <option value="1" @if (item.IsReturn.Value) { @: selected
                                            }>
                                        Có
                                    </option>
                                    <option value="0" @if (item.IsReturn.HasValue && !item.IsReturn.Value) { @: selected
                                            }>
                                        Không
                                    </option>
                                </select>
                            </td>
                            <td class="input-group-sm">
                                <input class="form-control datepicker returnDate" placeholder="Ngày" value="@item.ReturnDate" style="background: white" readonly autocomplete="off" />
                            </td>
                            <td class="input-group-sm">
                                <input class="form-control timepicker returnTime" placeholder="Giờ" value="@item.ReturnTime" type="time" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div style="text-align: center">
        <label id="add-row-items" class="btn-primary btn top-space btn-sm" title="Thêm hàng hóa khác" style="cursor: pointer; margin-top:8px;">
            <i class="fas fa-plus"></i>&nbsp; Thêm tài sản
        </label>
        <button id="register" class="btn-success btn btn-sm" type="submit" title="Đăng ký mang hàng vào" style="cursor: pointer">
            <i class="fas fa-edit"></i>&nbsp; Cập nhật
        </button>
    </div>
</div>
@section scripts{
    <script src="~/Assets/js/jquery.timepicker.min.js"></script>
    <script src="~/Assets/js/jquery-confirm.js"></script>
    <script src="~/Assets/js/go_out/common.js"></script>
    <script>
        $("#add-row-items").off('click').on('click', function (e) {
            var html = `<tr class="row-items">
                            <td>
                                <label class="control-label btn btn-sm delete-items"><i class="fas fa-times-circle"></i></label>
                            </td>
                            <td class="input-group-sm">
                                <input class="form-control input-previous-button item" />
                            </td>
                            <td class="input-group-sm">
                                <input class="form-control input-previous-button serial" />
                            </td>
                            <td class="input-group-sm">
                                <input type="number" class="form-control input-previous-button quantity" min="0" />
                            </td>
                            <td class="input-group-sm">
                                <input class="form-control input-previous-button unit" />
                            </td>
                            <td class="input-group-sm">
                                <select class="form-control input-previous-button assetType">
                                    <option value="0" selected>Hàng thường</option>
                                    <option value="1">Hàng IT</option>
                                    <option value="2">Hàng độc hại</option>
                                </select>
                            </td>
                            <td class="input-group-sm">
                                <select class="form-control input-previous-button isReturn">
                                <option value="true" selected>Có</option>
                                <option value="false">Không</option>
                                </select>
                            </td>
                            <td class="input-group-sm">
                                <input class="form-control datepicker returnDate" placeholder="Ngày" style="background: white" readonly autocomplete="off" />
                            </td>
                            <td class="input-group-sm">
                                <input class="form-control timepicker returnTime" placeholder="Giờ" type="time" />
                            </td>
                        </tr>`;
            $('#GO-items > tbody:last-child').append(html);

            $('.datepicker, #estimated_date, .returnDate').datepicker({
                dateFormat: 'dd/mm/yy'
            });

            $("#GO-items").on("click", ".delete-items", function () {
                $(this).closest(".row-items").remove();
            });
        });

        $('.datepicker, #estimated_date').datepicker({
            dateFormat: 'dd/mm/yy'
        });

        $("#GO-items").on("click", ".delete-items", function () {
            $(this).closest(".row-items").remove();
        });

        //Edit
        $('#register').on("click", (event) => {
            event.preventDefault();
            var data = new FormData();
            var goOutObject = {};
            goOutObject.ID = $('#txtID').val();
            goOutObject.EmpCode = $('#txtEmpCodeGO').val();
            goOutObject.Reason = $('#reason').val();
            goOutObject.Shift = $('#shift').val();
            goOutObject.Purpose = $('#purpose').val();
            goOutObject.FullName = $('#txtFullNameGO').val();
            goOutObject.Position = $('#txtPositionGO').val();
            goOutObject.Team = $('#txtTeamGO').val();
            goOutObject.EstimatedDateOut = $('#estimated_date_out').val();
            goOutObject.EstimatedTimeOut = $('#estimated_time_out').val();
            goOutObject.EstimatedDateReturn = $('#estimated_date_return').val();
            goOutObject.EstimatedTimeReturn = $('#estimated_time_return').val();
            goOutObject.Go_Out_Items = [];

            $(".row-items").each((index, item) => {
                var goOutItem = {};
                goOutItem.ID = $(item).find('input[class*=ItemId]').val();
                goOutItem.CatID = $('#txtID').val();
                goOutItem.Item = $(item).find('input[class*=item]').val();
                goOutItem.Serial = $(item).find('input[class*=serial]').val();
                goOutItem.Quantity = $(item).find('input[class*=quantity]').val();
                goOutItem.Unit = $(item).find('input[class*=unit]').val();
                goOutItem.AssetType = $(item).find('select[class*=assetType]').val();
                goOutItem.IsReturn = $(item).find('select[class*=isReturn]').val() === '1';
                goOutItem.ReturnDate = $(item).find('input[class*=returnDate]').val();
                goOutItem.ReturnTime = $(item).find('input[class*=returnTime]').val();

                goOutObject.Go_Out_Items.push(goOutItem);
            });
            data.append("GoOut", JSON.stringify(goOutObject));
            //goOutObject.append("file", $('#fileRedirectUrl')[0].files[0]);

            $.confirm({
                title: "Thông báo",
                content: function () {
                    var self = this;
                    return $.ajax({
                        url: "/GoOut/Edit",
                        method: "POST",
                        data: data,
                        processData: false,
                        contentType: false,
                        success: function (mess) {
                            if (mess === "Success") {
                                window.location.href = "/GoOut/History"
                            }
                            else {
                                self.setContent(mess);
                            }
                        }
                    })
                }
            })

        });

        $("#GO").removeClass('collapse');
        $("#GO").removeClass('collapsed');
        $("#GO").attr("aria-expanded", "true");
        $("#GOHistory").addClass('active');
        $("#collapseGoOut").addClass('show');
        $("#collapseInOut").removeClass('collapse');
    </script>

}


------------------------------------------------------------------------------


@{
    ViewBag.Title = "History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/Assets/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Assets/css/jquery-confirm.css" rel="stylesheet" />
    <style>
        label {
            color: black;
        }

        #LE-table_filter {
            display: none;
        }
    </style>
}

<!--Div chứa table dữ liệu-->
<div style="width:100%">
    <div class="card-header">
        <h5 class="m-0 font-weight-bold text-primary">DANH SÁCH CNV RA NGOÀI</h5>
    </div>
    <div class="row dataTables_wrapper dt-bootstrap4 above-table">
        <div class="col-2 input-group input-group-sm">
            <label class="no-margin-bottom" style="padding-top: 5px">Từ ngày</label>
            &nbsp;
            <input id="date_from" class="form-control bg-light from-date" autocomplete="off">
        </div>
        <div class="col-2 input-group input-group-sm">
            <label class="no-margin-bottom" style="padding-top: 5px">Đến ngày</label>
            &nbsp;
            <input id="date_to" class="form-control bg-light to-date" autocomplete="off">
        </div>
        <div class="col-1">
            <button class="btn btn-sm btn-primary" id="btn-search" type="button"><i class="fas fa-search"></i> Tìm kiếm</button>
        </div>
        <div class="col-5"></div>
        <div class="col-2 input-group input-group-sm">
            <label class="no-margin-bottom" style="padding-top: 5px">Tìm kiếm chung</label>
            &nbsp;
            <input class="form-control bg-light to-date" type="text" id="search-all" autocomplete="off" />
        </div>
    </div>

    <div style="width:100%; overflow-x:auto">
        <!--Bảng dữ liệu Ra ngoài-->
        <table class="table table-hover table-bordered" id="LE-table" style="border-collapse: collapse; width: 100%" data-order='[[ 1, "desc" ]]'>
            <!--Tiêu đề cột-->
            <thead>
                <tr class="table-heading">
                    <th class="th-1">In ấn</th>
                    <th class="th-1">Mã</th>
                    <th class="th-1">Nhân viên</th>
                    <th class="th-1">Vị trí</th>
                    <th class="th-1">Phòng ban</th>
                    <th class="th-1">Ca</th>
                    <th class="th-1">Mục đích</th>
                    <th class="th-1">Lí do</th>
                    <th class="th-1">Thời gian ra</th>
                    <th class="th-1">Thời gian quay lại</th>
                    <th class="th-1">Thao tác</th>
                    <th class="th-1">Chi tiết</th>
                    <th class="th-1">Người tạo</th>
                    <th class="th-1">Chỉnh sửa</th>
                </tr>
            </thead>
            <tbody id="tblData"></tbody>
        </table>
    </div>
</div>
<div id="pagination" class="pagination"></div>
<!-- /.container-fluid -->

@section scripts{
    <script src="~/Assets/js/jquery.timepicker.min.js"></script>
    <script src="~/Assets/js/jquery-confirm.js"></script>
    <script src="~/Assets/js/jquery.dataTables.min.js"></script>
    <script>
        var table = null;
        var currentRole = null;
        var items = null;

        $(document).ready(() => {
            var options = {
                "serverSide": false,
                "searching": true,
                "orderCellsTop": true,
                "fixedHeader": true,
                "processing": true,
                "paging": true,
                "oLanguage": {
                    "sLengthMenu": "_MENU_"
                },
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                "pageLength": 20,
                "lengthChange": false,
                "ajax": {
                    "type": "POST",
                    "url": "/GoOut/FetchGoOutData",
                    "dataType": "json",
                    "contentType": 'application/json; charset=utf-8',

                    "dataSrc": function (res) {
                        currentRole = res.currentRole;
                        items = res.items;
                        return res.data;
                    }
                },
                "columns": [
                    {
                        data: function (res) {
                            var html = '';
                            if (!res.Cancel) {
                                html = `<a href="/GoOut/GOReport/${res.ID}" target="_blank" class="btn btn-print btn-primary btn-standard" id="btnPrint" title="In báo cáo">
                                               <i class="fas fa-print" style="margin-left:-3.5px;"></i>
                                            </a>`
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            html = '';
                            if (isOver(res, items)) {
                                html = `<span style="color:red">${res.ID}</span>`
                            } else {
                                html = `<span>${res.ID}</span>`
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            html = '';
                            if (isOver(res, items)) {
                                html = `<span class="border-right" style="padding-right:10px; color:red">${res.EmpCode}</span><span style="margin-left:10px; color:red">${res.FullName}</span>`
                            } else {
                                html = `<span class="border-right" style="padding-right:10px;">${res.EmpCode}</span><span style="margin-left:10px;">${res.FullName}</span>`
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            html = '';
                            if (isOver(res, items)) {
                                html = `<span style="color:red">${res.Position}</span>`
                            } else {
                                html = `<span>${res.Position}</span>`
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            html = '';
                            if (isOver(res, items)) {
                                html = `<span style="color:red">${res.Team}</span>`
                            } else {
                                html = `<span>${res.Team}</span>`
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            shift = '';
                            html = '';
                            if (res.Shift == 0) {
                                shift = 'Hành chính'
                            } else if (res.Shift == 1) {
                                shift = '1'
                            } else if (res.Shift == 2) {
                                shift = '2'
                            } else if (res.Shift == 3) {
                                shift = '3'
                            }
                            if (isOver(res, items)) {
                                html = `<span style="color:red">${shift}</span>`
                            } else {
                                html = `<span>${shift}</span>`
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            html = '';
                            purpose = '';
                            if (res.Purpose == 0) {
                                purpose = 'Cá nhân'
                            } else if (res.Purpose == 1) {
                                purpose = 'Công việc'
                            }
                            if (isOver(res, items)) {
                                html = `<span style="color:red">${purpose}</span>`
                            } else {
                                html = `<span>${purpose}</span>`
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            html = '';
                            if (isOver(res, items)) {
                                html = `<span style="color:red">${res.Reason}</span>`
                            } else {
                                html = `<span>${res.Reason}</span>`
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            html = '';
                            if (isOver(res, items)) {
                                html = `<span style="color:red">${res.EstimatedDateOut}</span> <span style="color:red">${res.EstimatedTimeOut}</span>`
                            } else {
                                html = `<span>${res.EstimatedDateOut}</span> <span>${res.EstimatedTimeOut}</span>`
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            html = '';
                            if (isOver(res, items)) {
                                html = `<span style="color:red">${res.EstimatedDateReturn}</span> <span style="color:red">${res.EstimatedTimeReturn}</span>`
                            } else {
                                html = `<span>${res.EstimatedDateReturn}</span> <span>${res.EstimatedTimeReturn}</span>`
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            if (currentRole <= 1) {
                                return ''
                            }

                            var html = '';
                            if (res.Cancel) {
                                html = `<span class="red"><b>Hủy bỏ</b></span>`;
                            }
                            else {
                                if (res.GuardStatusReturn == null) {
                                    if (res.ApprovedStatus != null) {
                                        html = `<a class="btn btn-cancel btn-danger btn-standard" id="btnCancel" onclick="Cancel(${res.ID})" title="Hủy bỏ">
                                                       <i class="fas fa-lock" style="margin-left: -3px"></i>
                                                    </a>`
                                    } else {
                                        html = `<a class="btn btn-edit btn-standard btnEdit" title="Sửa" href="/GoOut/Edit/${res.ID}">
                                                       <i class="icon fas fa-cog" style="margin-left: -4px"></i>
                                                    </a>
                                                    <a class="btn btn-danger btn-standard btn-delete btnXoa" onclick="Delete(${res.ID})" title="Xóa">
                                                       <i class="icon fas fa-times" style="margin-left: -2px; color: white; cursor: pointer"></i>
                                                    </a>`;
                                    }
                                }
                            }
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            var html = `<a href="/GoOut/Detail/${res.ID}" class="btn btn-standard btn-primary"><i class="fas fa-info" style="color: white"></i></a>`;
                            return html;
                        }
                    },
                    {
                        data: function (res) {
                            if (res.CreatedDate === null || res.CreatedDate === "" || typeof (res.CreatedDate) === "undefined")
                                return "";
                            var date = new Date(parseInt(res.CreatedDate.replace(/[^0-9 +]/g, '')));
                            var createdDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}  ${date.getHours()}:${date.getMinutes()}`;
                            return `<span class="border-right" style="padding-right:10px;">${res.CreatedBy}</span><span style="margin-left:10px;">${createdDate}</span>`;
                        }
                    },
                    {
                        data: function (res) {
                            if (res.ModifiedDate === null || res.ModifiedDate === "" || typeof (res.ModifiedDate) === "undefined")
                                return "";
                            var date = new Date(parseInt(res.ModifiedDate.replace(/[^0-9 +]/g, '')));
                            var modifiedDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;
                            return `<span class="border-right" style="padding-right:10px;">${res.ModifiedBy}</span ><span style="margin-left:10px;">${modifiedDate}</span>`;
                        }
                    }
                ]
            };
            table = $('#LE-table').DataTable(options);

            $('#search-all').keyup(function () {
                table.search($(this).val()).draw();
            })
        });

        ///Lấy ra hàng hóa đã phê duyệt r
        function isApproved(data, items) {
            return items.find(t => t.CatID === data.ID && t.ApprovedStatus !== null)
        }

        ///Khi đã xong quy trình thì k làm j nữa
        function isNotDone(data, items) {
            return items.find(t => t.CatID === data.ID && t.GuardStatusReturn === null)
        }

        ///Lấy ra hàng hóa quá hạn
        function isOver(data, items) {
            const obj = items.find(t => (t.CatID === data.ID && t.ReturnDate !== null && t.IsReturn === true && t.GuardStatusReturn == null && new Date(`${t.ReturnDate.split('/')[1]}/${t.ReturnDate.split('/')[0]}/${t.ReturnDate.split('/')[2]}`).getTime() - new Date(`${new Date().getMonth() + 1}/${new Date().getDate()}/${new Date().getFullYear()}`).getTime() < 0))
            return !!obj
        }

        function Delete(id) {
            $.confirm({
                title: 'Xác nhận!',
                content: 'Bạn có chắc muốn xóa!',
                buttons: {
                    confirm: async function () {
                        await $.ajax({
                            url: "/GoOut/Delete/" + id,
                            method: "GET",
                            success: function () {
                                window.location.reload();
                            }
                        })
                    },
                    cancel: function () {
                        //$.alert('Hủy bỏ!');
                    }
                }
            });
        }

        function Cancel(id) {
            $.confirm({
                title: 'Xác nhận!',
                content: 'Bạn có chắc muốn hủy!',
                buttons: {
                    confirm: async function () {
                        await $.ajax({
                            url: "/GoOut/Cancel/" + id,
                            method: "GET",
                            success: function () {
                                window.location.reload();
                            }
                        })
                    },
                    cancel: function () {
                        //$.alert('Hủy bỏ!');
                    }
                }
            });
        }

        $('.datepicker, #date_from, #date_to').datepicker({
            dateFormat: 'dd/mm/yy'
        });

        $("#GO").removeClass('collapse');
        $("#GO").removeClass('collapsed');
        $("#GO").attr("aria-expanded", "true");
        $("#GOHistory").addClass('active');
        $("#collapseGoOut").addClass('show');
        $("#collapseInOut").removeClass('collapse');
    </script>

    <script src="~/Assets/js/go_out/common.js"></script>
}




-------------------------------------------------------------------------


































-------------------Controller------------------------------------------
[AuthorizeUser(AccessLevel = 2)]
        [HttpPost]
        public ActionResult Edit(Go_Out m)
        {
            try
            {
                var goJSON = Request.Form.Get("GoOut");
                var model = JsonConvert.DeserializeObject<Go_Out>(goJSON);

                var user = (UserLogin)Session[CommonConstants.USER_SESSION];

                var GoOut = _dbContext.Go_Out.FirstOrDefault(t => t.ID == model.ID);
                GoOut.ModifiedBy = user.EmpCode + "|" + user.FullName;
                GoOut.ModifiedDate = DateTime.Now;
                GoOut.Reason = model.Reason;
                GoOut.Shift = model.Shift;
                GoOut.Purpose = model.Purpose;
                GoOut.EstimatedDateOut = model.EstimatedDateOut;
                GoOut.EstimatedTimeOut = model.EstimatedTimeOut;
                GoOut.EstimatedDateReturn = model.EstimatedDateReturn;
                GoOut.EstimatedTimeReturn = model.EstimatedTimeReturn;
                //if (filePath != "")
                //{
                //    GoOut.AttachedFile = model.AttachedFile;
                //}

                var listItemIDs = new List<int>();
                foreach (var item in model.Go_Out_Items)
                {
                    if (item.ID == 0)
                    {
                        _dbContext.Go_Out_Items.Add(item);
                    }
                    else
                    {
                        listItemIDs.Add(item.ID);
                        var bringItem = _dbContext.Go_Out_Items.FirstOrDefault(t => t.ID == item.ID);

                        bringItem.Item = item.Item;
                        bringItem.Serial = item.Serial;
                        bringItem.Quantity = item.Quantity;
                        bringItem.Unit = item.Unit;
                        bringItem.AssetType = item.AssetType;
                        bringItem.IsReturn = item.IsReturn;
                        bringItem.ReturnDate = item.ReturnDate;
                        bringItem.ReturnTime = item.ReturnTime;
                        bringItem.ModifiedBy = user.EmpCode;
                        bringItem.ModifiedDate = DateTime.Now;
                    }
                }
                var itemsDelete = _dbContext.Go_Out_Items.Where(t => !listItemIDs.Contains(t.ID) && t.CatID == GoOut.ID);
                _dbContext.Go_Out_Items.RemoveRange(itemsDelete);

                _dbContext.SaveChanges();

                return Content("Success");
            }
            catch (System.Exception ex)
            {
                return Content("Lỗi trong quá trình xử lý");
            }
        }
        
        
       ------------------------------------ View -----------------------------
       
        //Edit
        $('#register').on("click", (event) => {
            event.preventDefault();
            var data = new FormData();
            var goOutObject = {};
            goOutObject.ID = $('#txtID').val();
            goOutObject.EmpCode = $('#txtEmpCodeGO').val();
            goOutObject.Reason = $('#reason').val();
            goOutObject.Shift = $('#shift').val();
            goOutObject.Purpose = $('#purpose').val();
            goOutObject.FullName = $('#txtFullNameGO').val();
            goOutObject.Position = $('#txtPositionGO').val();
            goOutObject.Team = $('#txtTeamGO').val();
            goOutObject.EstimatedDateOut = $('#estimated_date_out').val();
            goOutObject.EstimatedTimeOut = $('#estimated_time_out').val();
            goOutObject.EstimatedDateReturn = $('#estimated_date_return').val();
            goOutObject.EstimatedTimeReturn = $('#estimated_time_return').val();
            goOutObject.Go_Out_Items = [];

            $(".row-items").each((index, item) => {
                var goOutItem = {};
                goOutItem.ID = $(item).find('input[class*=ItemId]').val();
                goOutItem.CatID = $('#txtID').val();
                goOutItem.Item = $(item).find('input[class*=item]').val();
                goOutItem.Serial = $(item).find('input[class*=serial]').val();
                goOutItem.Quantity = $(item).find('input[class*=quantity]').val();
                goOutItem.Unit = $(item).find('input[class*=unit]').val();
                goOutItem.AssetType = $(item).find('select[class*=assetType]').val();
                goOutItem.IsReturn = $(item).find('select[class*=isReturn]').val() === '1';
                goOutItem.ReturnDate = $(item).find('input[class*=returnDate]').val();
                goOutItem.ReturnTime = $(item).find('input[class*=returnTime]').val();

                goOutObject.Go_Out_Items.push(goOutItem);
            });
            data.append("GoOut", JSON.stringify(goOutObject));
            //goOutObject.append("file", $('#fileRedirectUrl')[0].files[0]);

            $.confirm({
                title: "Thông báo",
                content: function () {
                    var self = this;
                    return $.ajax({
                        url: "/GoOut/Edit",
                        method: "POST",
                        data: data,
                        processData: false,
                        contentType: false,
                        success: function (mess) {
                            if (mess === "Success") {
                                window.location.href = "/GoOut/History"
                            }
                            else {
                                self.setContent(mess);
                            }
                        }
                    })
                }
            })

        });
